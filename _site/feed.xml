<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>自己动手,丰衣足食!</description>
    <link>https://ljw718.github.io//</link>
    <atom:link href="https://ljw718.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 22 Aug 2021 13:03:27 +0800</pubDate>
    <lastBuildDate>Sun, 22 Aug 2021 13:03:27 +0800</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>Git常用命令</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1git工作流程&quot; id=&quot;markdown-toc-1git工作流程&quot;&gt;1、Git工作流程&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2常用命令&quot; id=&quot;markdown-toc-2常用命令&quot;&gt;2、常用命令&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1git工作流程&quot;&gt;1、Git工作流程&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/Git/git-process.png&quot; alt=&quot;git-process&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2常用命令&quot;&gt;2、常用命令&lt;/h2&gt;

&lt;p&gt;Git 常用的是以下 6 个命令：&lt;strong&gt;git clone&lt;/strong&gt;、&lt;strong&gt;git push&lt;/strong&gt;、&lt;strong&gt;git add&lt;/strong&gt; 、&lt;strong&gt;git commit&lt;/strong&gt;、&lt;strong&gt;git checkout&lt;/strong&gt;、&lt;strong&gt;git pull&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/Git/git-command.jpg&quot; alt=&quot;git-command&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 22 Aug 2021 12:08:00 +0800</pubDate>
        <link>https://ljw718.github.io//2021/08/22/Git-command/</link>
        <guid isPermaLink="true">https://ljw718.github.io//2021/08/22/Git-command/</guid>
        
        
        <category>Git</category>
        
      </item>
    
      <item>
        <title>LeetCode刷题常用算法思路与框架</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1二分查找&quot; id=&quot;markdown-toc-1二分查找&quot;&gt;1、二分查找&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2双指针&quot; id=&quot;markdown-toc-2双指针&quot;&gt;2、双指针&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3滑动窗口&quot; id=&quot;markdown-toc-3滑动窗口&quot;&gt;3、滑动窗口&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;总结&lt;a href=&quot;https://leetcode-cn.com/problemset/all/&quot;&gt;LeetCode&lt;/a&gt;刷题过程中常用的算法，以及整理部分算法思路框架，并且以伪代码实现&lt;/p&gt;

&lt;h2 id=&quot;1二分查找&quot;&gt;1、二分查找&lt;/h2&gt;
&lt;p&gt;算法思路：从中间开始找，中间值等于目标值，返回true，中间值小于目标值，则从中间值右边开始查找，否则， 从中间值左边开始查找，直到找到目标返回，否则返回false。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nums = [1,2,3,4,5,6,...,n], size = n, target = x
int left = 0;
int right = n - 1;
int mid = 0;
while (left &amp;lt;= right) {
	mid = left + (right - left)/2
	if (nums[mid] == target) {
		return true;
	} else if(nums[mid] &amp;lt; target) {
		left = mid + 1;
	} else {
		right = mid
	}
}
return false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;2双指针&quot;&gt;2、双指针&lt;/h2&gt;
&lt;p&gt;算法思路：涉及一维数组，大部分是双指针一个在左，一个在右，多维数组，都从左边开始，满足条件的指针先动。&lt;/p&gt;

&lt;p&gt;LeetCode第11题：  &lt;a href=&quot;https://leetcode-cn.com/problems/container-with-most-water/&quot;&gt;盛最多水的容器&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nums = [1,7,3,5,5,6,7,8.6,2]   size = n, target = x

int left = 0;
int right = size - 1;
int x = 1;
int min = 0;
int max = 0;
while (left &amp;lt; right) {
	min = MIN(nums[left], nums[right]);
	max = MAX(max, min * (right, - left));
	if (nums[left] &amp;lt; nums[right]) {
		++left;
	}
	++right;
}
return max;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3滑动窗口&quot;&gt;3、滑动窗口&lt;/h2&gt;

&lt;p&gt;算法思路：定义两个索引left和right, 开始都指向窗口起始位置，先移动right,改变窗口大小，此时检查窗口内部的数据是否满足待测条件， 不满足窗口继续向右移动， 若满足；计算窗口内部的数据，left右移。&lt;/p&gt;

&lt;p&gt;LeetCode第209题：&lt;a href=&quot;https://leetcode-cn.com/problems/minimum-size-subarray-sum/&quot;&gt;长度最小的子数组&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nums = [1,2,3,4,5,6,7,8...,n]   size = n, target = x
int left = 0;
int right = 0;
int x = 1;
while (right &amp;lt; size) {
	x *= nums[right];
	while (x &amp;gt;= targht) {
		// 省略处理过程
		++left;
	}
	++right;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 19 Aug 2021 22:08:00 +0800</pubDate>
        <link>https://ljw718.github.io//2021/08/19/Algorithms/</link>
        <guid isPermaLink="true">https://ljw718.github.io//2021/08/19/Algorithms/</guid>
        
        <category>常用算法思路与框架</category>
        
        
        <category>LeetCode</category>
        
      </item>
    
      <item>
        <title>GDB分析进程占用CPU过高问题</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1查看cpu与进程id&quot; id=&quot;markdown-toc-1查看cpu与进程id&quot;&gt;1、查看CPU与进程ID&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2查看线程pid占用cpu情况&quot; id=&quot;markdown-toc-2查看线程pid占用cpu情况&quot;&gt;2、查看线程pid占用CPU情况&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3attach到相关进程&quot; id=&quot;markdown-toc-3attach到相关进程&quot;&gt;3、attach到相关进程&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4查看线程信息&quot; id=&quot;markdown-toc-4查看线程信息&quot;&gt;4、查看线程信息&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5查看线程号对应的线程id&quot; id=&quot;markdown-toc-5查看线程号对应的线程id&quot;&gt;5、查看线程号对应的线程ID&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6根据线程id切换线程&quot; id=&quot;markdown-toc-6根据线程id切换线程&quot;&gt;6、根据线程ID切换线程&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7查看函数调用栈&quot; id=&quot;markdown-toc-7查看函数调用栈&quot;&gt;7、查看函数调用栈&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#8根据调用函数分析源代码&quot; id=&quot;markdown-toc-8根据调用函数分析源代码&quot;&gt;8、根据调用函数分析源代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;重点是查看进程的线程中，哪个线程占用cpu过高，然后用gdb附加到进程，调试线程，看是否有死循环或者死锁等问题。
调试步骤参考如下：&lt;/p&gt;

&lt;h2 id=&quot;1查看cpu与进程id&quot;&gt;1、查看CPU与进程ID&lt;/h2&gt;
&lt;p&gt;先用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;top&lt;/code&gt;查看CPU使用情况，再用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ps + grep&lt;/code&gt;找出该死的进程pid，比如 36625&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/Linux/gdb-pthread/1.png&quot; alt=&quot;p1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2查看线程pid占用cpu情况&quot;&gt;2、查看线程pid占用CPU情况&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;top -H -p 36625&lt;/code&gt;，(top然后shift+H可以看出某个线程，左上角有提示：thread on 则为可查看线程)所有该进程的线程都列出来， 看看哪个线程pid占用cpu最多，记下对应的线程号，如：36643
&lt;img src=&quot;/styles/images/Linux/gdb-pthread/2.png&quot; alt=&quot;p2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3attach到相关进程&quot;&gt;3、attach到相关进程&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gdb attach&lt;/code&gt; 到进程号码（36625）
&lt;img src=&quot;/styles/images/Linux/gdb-pthread/3.png&quot; alt=&quot;p3&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4查看线程信息&quot;&gt;4、查看线程信息&lt;/h2&gt;
&lt;p&gt;（仍然在gdb中） &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;info threads&lt;/code&gt; 结果大致如下：
&lt;img src=&quot;/styles/images/Linux/gdb-pthread/4.png&quot; alt=&quot;p4&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5查看线程号对应的线程id&quot;&gt;5、查看线程号对应的线程ID&lt;/h2&gt;
&lt;p&gt;找到线程号码对应的thread（LWP 36643）即是我们刚刚记下的线程号
&lt;img src=&quot;/styles/images/Linux/gdb-pthread/5.png&quot; alt=&quot;p5&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6根据线程id切换线程&quot;&gt;6、根据线程ID切换线程&lt;/h2&gt;
&lt;p&gt;（仍然在gdb中）&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;thread  线程号码切换到线程（2）&lt;/code&gt;–这里在info threads显示出来的序号需要使用gdb能识别的线程序号，即执行：thread 2 切换到我们刚刚记下的线程号：36643的对应线程，如下：
&lt;img src=&quot;/styles/images/Linux/gdb-pthread/6.png&quot; alt=&quot;p6&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;7查看函数调用栈&quot;&gt;7、查看函数调用栈&lt;/h2&gt;
&lt;p&gt;（仍然在gdb中）&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bt&lt;/code&gt; 查看线程调用堆栈 
&lt;img src=&quot;/styles/images/Linux/gdb-pthread/7.png&quot; alt=&quot;p7&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;8根据调用函数分析源代码&quot;&gt;8、根据调用函数分析源代码&lt;/h2&gt;
&lt;p&gt;从上面输出的信息，基本上可以查看线程对应的代码断，是否有死循环等，如果是死锁的话，需要多次查看当前线程堆栈，或者查看全部线程的堆栈，总是会有某些个线程跟其他线程不一致，然后再对应到代码来进行定位解决
&lt;img src=&quot;/styles/images/Linux/gdb-pthread/8.png&quot; alt=&quot;p8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;代码中此处陷入死循环。&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Aug 2019 22:08:00 +0800</pubDate>
        <link>https://ljw718.github.io//2019/08/13/LinuxDebugPthread/</link>
        <guid isPermaLink="true">https://ljw718.github.io//2019/08/13/LinuxDebugPthread/</guid>
        
        <category>GDB调试</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>程序猿颈椎保健操</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#程序猿颈椎保健操&quot; id=&quot;markdown-toc-程序猿颈椎保健操&quot;&gt;&lt;strong&gt;程序猿颈椎保健操&lt;/strong&gt;&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#一双掌擦颈&quot; id=&quot;markdown-toc-一双掌擦颈&quot;&gt;一、双掌擦颈。&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#二左顾右盼&quot; id=&quot;markdown-toc-二左顾右盼&quot;&gt;二、左顾右盼。&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#三前后点头&quot; id=&quot;markdown-toc-三前后点头&quot;&gt;三、前后点头。&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#四旋肩舒颈&quot; id=&quot;markdown-toc-四旋肩舒颈&quot;&gt;四、旋肩舒颈。&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#五颈项争力&quot; id=&quot;markdown-toc-五颈项争力&quot;&gt;五、颈项争力。&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#六摇头晃脑&quot; id=&quot;markdown-toc-六摇头晃脑&quot;&gt;六、摇头晃脑。&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#七头手相抗&quot; id=&quot;markdown-toc-七头手相抗&quot;&gt;七、头手相抗。&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#八仰头望掌&quot; id=&quot;markdown-toc-八仰头望掌&quot;&gt;八、仰头望掌。&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这套颈椎保健操,适合在电脑前久坐工作的小伙伴&lt;/p&gt;

&lt;h1 id=&quot;程序猿颈椎保健操&quot;&gt;&lt;strong&gt;程序猿颈椎保健操&lt;/strong&gt;&lt;/h1&gt;
&lt;h2 id=&quot;一双掌擦颈&quot;&gt;一、双掌擦颈。&lt;/h2&gt;
&lt;p&gt;方法：用左手掌来回摩擦颈部，口中默念八下后，开始捏后颈，然后换右手，有助于颈部放松。&lt;br /&gt;
&lt;img src=&quot;/styles/images/healthy/1.png&quot; alt=&quot;p1&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;二左顾右盼&quot;&gt;二、左顾右盼。&lt;/h2&gt;
&lt;p&gt;方法：头向左转90度，停留3秒，再向右转，停留3秒，做两个8拍。  &lt;br /&gt;
&lt;img src=&quot;/styles/images/healthy/2.png&quot; alt=&quot;p2&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;三前后点头&quot;&gt;三、前后点头。&lt;/h2&gt;
&lt;p&gt;方法：把颈尽量向前伸，停留3秒，再向后仰，停留3秒，做两个8拍。&lt;br /&gt;
&lt;img src=&quot;/styles/images/healthy/3.png&quot; alt=&quot;p3&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;四旋肩舒颈&quot;&gt;四、旋肩舒颈。&lt;/h2&gt;
&lt;p&gt;方法：双手放在肩部，掌心向下，两臂先由后向前旋转20-30次，再由前向后旋转20-30次。&lt;br /&gt;
&lt;img src=&quot;/styles/images/healthy/4.png&quot; alt=&quot;p4&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;五颈项争力&quot;&gt;五、颈项争力。&lt;/h2&gt;
&lt;p&gt;方法：左手放在背后，右手手臂放在胸前，手掌立起向左平行推出，同时头部向右看，保持几秒钟，再换左右手。&lt;br /&gt;
&lt;img src=&quot;/styles/images/healthy/5.png&quot; alt=&quot;p5&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;六摇头晃脑&quot;&gt;六、摇头晃脑。&lt;/h2&gt;
&lt;p&gt;方法：左右、前后，360度旋转5次，再反方向旋转5次。&lt;br /&gt;
&lt;img src=&quot;/styles/images/healthy/6.png&quot; alt=&quot;p6&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;七头手相抗&quot;&gt;七、头手相抗。&lt;/h2&gt;
&lt;p&gt;方法：双手交叉仅仅贴颈后，用力顶头颈，头颈向后用力，互相抵抗5次。&lt;br /&gt;
&lt;img src=&quot;/styles/images/healthy/7.png&quot; alt=&quot;p7&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;八仰头望掌&quot;&gt;八、仰头望掌。&lt;/h2&gt;
&lt;p&gt;方法：双手上举过头，手指交叉，掌心向上，将头扬起向上看手背，保持5秒。&lt;br /&gt;
&lt;img src=&quot;/styles/images/healthy/8.png&quot; alt=&quot;p8&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 13 Aug 2019 20:20:00 +0800</pubDate>
        <link>https://ljw718.github.io//2019/08/13/CervicalHealthExercise/</link>
        <guid isPermaLink="true">https://ljw718.github.io//2019/08/13/CervicalHealthExercise/</guid>
        
        <category>健康操</category>
        
        
        <category>健康</category>
        
      </item>
    
      <item>
        <title>Sublime Text3使用技巧</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1package-control快速安装&quot; id=&quot;markdown-toc-1package-control快速安装&quot;&gt;1、Package Control快速安装&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2package-control使用&quot; id=&quot;markdown-toc-2package-control使用&quot;&gt;2、Package Control使用&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3解决unable-to-download-xxx问题&quot; id=&quot;markdown-toc-3解决unable-to-download-xxx问题&quot;&gt;3、解决Unable to download XXX问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4安装常用插件&quot; id=&quot;markdown-toc-4安装常用插件&quot;&gt;4、安装常用插件&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#41--localization-汉化&quot; id=&quot;markdown-toc-41--localization-汉化&quot;&gt;4.1  Localization [汉化]&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42--docblockr-生成注释&quot; id=&quot;markdown-toc-42--docblockr-生成注释&quot;&gt;4.2  Doc​Blockr [生成注释]&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43--autofilename-自动完成文件路径&quot; id=&quot;markdown-toc-43--autofilename-自动完成文件路径&quot;&gt;4.3  AutoFileName [自动完成文件路径]&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#44--ctags-函数跳转&quot; id=&quot;markdown-toc-44--ctags-函数跳转&quot;&gt;4.4  CTags [函数跳转]&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#44--astyleformatter-cc等编码风格格式器&quot; id=&quot;markdown-toc-44--astyleformatter-cc等编码风格格式器&quot;&gt;4.4  AStyleFormatter [C/C++等编码风格格式器]&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#45--converttoutf8--中文乱码解决包&quot; id=&quot;markdown-toc-45--converttoutf8--中文乱码解决包&quot;&gt;4.5  ConvertToUTF8  [中文乱码解决包]&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5卸载不常用插件&quot; id=&quot;markdown-toc-5卸载不常用插件&quot;&gt;5、卸载不常用插件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sublime Text3使用技巧及其常见问题解决办法&lt;/p&gt;

&lt;h1 id=&quot;1package-control快速安装&quot;&gt;1、Package Control快速安装&lt;/h1&gt;

&lt;p&gt;通过View-&amp;gt;Show Console菜单打开命令行&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/SublimeText3/Snipaste_2019-08-13_10-53-42-p1.jpg&quot; alt=&quot;图1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/SublimeText3/Snipaste_2019-08-13_11-02-50-p2.jpg&quot; alt=&quot;图2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;粘贴如下代码(注意下面代码为一行)：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;按下enter键,稍等即可, 
安装完毕后,重启sublime，此时就可以在Preferences菜单下看到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package Settings&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package Control&lt;/code&gt;两个菜单了。&lt;/p&gt;

&lt;h1 id=&quot;2package-control使用&quot;&gt;2、Package Control使用&lt;/h1&gt;

&lt;p&gt;打开命令行,快捷键为：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + Shift + p&lt;/code&gt;,输入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pci&lt;/code&gt;(点击Package Control:Install Packge选项),几秒钟后弹出插件管理页面,输入想要安装的插件名称,以&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctags&lt;/code&gt;为例&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/SublimeText3/Snipaste_2019-08-13_11-15-14-p3.png&quot; alt=&quot;图3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;按回车即可安装。&lt;/p&gt;

&lt;h1 id=&quot;3解决unable-to-download-xxx问题&quot;&gt;3、解决Unable to download XXX问题&lt;/h1&gt;

&lt;p&gt;Sublime Text3 安装插件报错：&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package Control&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Unable to download XXX. Please view the console for more details.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;解决方法：
Preferences &amp;gt; Package Settings &amp;gt; Package Control &amp;gt; Settings-User
&lt;img src=&quot;/styles/images/SublimeText3/Snipaste_2019-08-13_11-42-53-p4.png&quot; alt=&quot;图4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;增加如下内容：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;debug&quot;: true,
&quot;downloader_precedence&quot;:
{
    &quot;linux&quot;: [ &quot;curl&quot;, &quot;urllib&quot;, &quot;wget&quot; ],
    &quot;osx&quot;: [ &quot;curl&quot;, &quot;urllib&quot; ],
    &quot;windows&quot;: [ &quot;wininet&quot; ]
},
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;调整格式后内容如下：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
	&quot;bootstrapped&quot;: true,
	&quot;debug&quot;: true,
	&quot;downloader_precedence&quot;:
	{
		&quot;linux&quot;:
		[
			&quot;curl&quot;,
			&quot;urllib&quot;,
			&quot;wget&quot;
		],
		&quot;osx&quot;:
		[
			&quot;curl&quot;,
			&quot;urllib&quot;
		],
		&quot;windows&quot;:
		[
			&quot;wininet&quot;
		]
	},
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;再次安装插件就OK了。&lt;/p&gt;

&lt;h1 id=&quot;4安装常用插件&quot;&gt;4、安装常用插件&lt;/h1&gt;

&lt;h2 id=&quot;41--localization-汉化&quot;&gt;4.1  Localization [汉化]&lt;/h2&gt;
&lt;p&gt;使用：安装后，点击help-&amp;gt;languaremove packagege-&amp;gt;相应语言版本&lt;br /&gt;
&lt;img src=&quot;/styles/images/SublimeText3/Snipaste_2019-08-13_12-49-03-p5.png&quot; alt=&quot;图5&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;42--docblockr-生成注释&quot;&gt;4.2  Doc​Blockr [生成注释]&lt;/h2&gt;
&lt;p&gt;使用：输入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/**&lt;/code&gt;,然后按Tab键,该插件就会自动解析任何功能,并准备合适的模板 &lt;br /&gt;
自定义注释：Preferences &amp;gt; Package Settings &amp;gt; DocBlockr &amp;gt; Settings-User
&lt;img src=&quot;/styles/images/SublimeText3/Snipaste_2019-08-13_13-02-28-p6.png&quot; alt=&quot;图6&quot; /&gt;
输入&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    //自定义配置
    &quot;jsdocs_extra_tags&quot;: [
                    &quot;@Author liujw&quot;,
                    &quot;@DateTime &quot;,
                    &quot;@FuncName: &quot;,
                ],

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;43--autofilename-自动完成文件路径&quot;&gt;4.3  AutoFileName [自动完成文件路径]&lt;/h2&gt;

&lt;h2 id=&quot;44--ctags-函数跳转&quot;&gt;4.4  CTags [函数跳转]&lt;/h2&gt;
&lt;p&gt;CTags58.zip下载链接&lt;a href=&quot;https://pan.baidu.com/s/18uYw4b6uX4_DffdJShfoug&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://pan.baidu.com/s/18uYw4b6uX4_DffdJShfoug&lt;/code&gt;&lt;/a&gt;[提取码：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ge06&lt;/code&gt;]&lt;br /&gt;
参考步骤 &lt;a href=&quot;https://www.jianshu.com/p/9f5801e83c6c&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://www.jianshu.com/p/9f5801e83c6c&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;44--astyleformatter-cc等编码风格格式器&quot;&gt;4.4  AStyleFormatter [C/C++等编码风格格式器]&lt;/h2&gt;
&lt;p&gt;使用：找到需要格式化的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.c&lt;/code&gt;文件,快捷键&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + ALT + F&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;45--converttoutf8--中文乱码解决包&quot;&gt;4.5  ConvertToUTF8  [中文乱码解决包]&lt;/h2&gt;

&lt;h1 id=&quot;5卸载不常用插件&quot;&gt;5、卸载不常用插件&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + Shift + p&lt;/code&gt;打开命令行,输入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pcrp&lt;/code&gt;(点击Package Control:Remove Packge选项),几秒钟后弹出插件管理页面,选择想要卸载的插件即可。&lt;/p&gt;

</description>
        <pubDate>Mon, 12 Aug 2019 23:08:00 +0800</pubDate>
        <link>https://ljw718.github.io//2019/08/12/SublimeText3Settings/</link>
        <guid isPermaLink="true">https://ljw718.github.io//2019/08/12/SublimeText3Settings/</guid>
        
        <category>Sublime Text3</category>
        
        
        <category>开发工具</category>
        
      </item>
    
      <item>
        <title>Linux常用shell命令汇总</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#系统信息&quot; id=&quot;markdown-toc-系统信息&quot;&gt;系统信息&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#关机-系统的关机重启以及登出-&quot; id=&quot;markdown-toc-关机-系统的关机重启以及登出-&quot;&gt;关机 (系统的关机、重启以及登出 )&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#文件和目录&quot; id=&quot;markdown-toc-文件和目录&quot;&gt;文件和目录&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#文件搜索&quot; id=&quot;markdown-toc-文件搜索&quot;&gt;文件搜索&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#挂载一个文件系统&quot; id=&quot;markdown-toc-挂载一个文件系统&quot;&gt;挂载一个文件系统&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#磁盘空间&quot; id=&quot;markdown-toc-磁盘空间&quot;&gt;磁盘空间&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#用户和群组&quot; id=&quot;markdown-toc-用户和群组&quot;&gt;用户和群组&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#文件的权限---使用--设置权限使用---用于取消&quot; id=&quot;markdown-toc-文件的权限---使用--设置权限使用---用于取消&quot;&gt;文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#文件的特殊属性---使用--设置权限使用---用于取消&quot; id=&quot;markdown-toc-文件的特殊属性---使用--设置权限使用---用于取消&quot;&gt;文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#打包和压缩文件&quot; id=&quot;markdown-toc-打包和压缩文件&quot;&gt;打包和压缩文件&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#rpm-包---fedora-redhat及类似系统&quot; id=&quot;markdown-toc-rpm-包---fedora-redhat及类似系统&quot;&gt;RPM 包 - （Fedora, Redhat及类似系统）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#yum-软件包升级器---fedora-redhat及类似系统&quot; id=&quot;markdown-toc-yum-软件包升级器---fedora-redhat及类似系统&quot;&gt;YUM 软件包升级器 - （Fedora, RedHat及类似系统）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#查看文件内容&quot; id=&quot;markdown-toc-查看文件内容&quot;&gt;查看文件内容&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#文本处理&quot; id=&quot;markdown-toc-文本处理&quot;&gt;文本处理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#字符设置和文件格式转换&quot; id=&quot;markdown-toc-字符设置和文件格式转换&quot;&gt;字符设置和文件格式转换&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#文件系统分析&quot; id=&quot;markdown-toc-文件系统分析&quot;&gt;文件系统分析&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#初始化一个文件系统&quot; id=&quot;markdown-toc-初始化一个文件系统&quot;&gt;初始化一个文件系统&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#swap文件系统&quot; id=&quot;markdown-toc-swap文件系统&quot;&gt;SWAP文件系统&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#备份&quot; id=&quot;markdown-toc-备份&quot;&gt;备份&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#网络---以太网和wifi无线&quot; id=&quot;markdown-toc-网络---以太网和wifi无线&quot;&gt;网络 - （以太网和WIFI无线）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章转载自:  https://www.cnblogs.com/yjd_hycf_space/p/7730690.html&lt;/p&gt;

&lt;h1 id=&quot;系统信息&quot;&gt;系统信息&lt;/h1&gt;
&lt;p&gt;arch 显示机器的处理器架构&lt;br /&gt;
uname -m 显示机器的处理器架构&lt;br /&gt;
uname -r 显示正在使用的内核版本&lt;br /&gt;
dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI) &lt;br /&gt;
hdparm -i /dev/hda 罗列一个磁盘的架构特性 &lt;br /&gt;
hdparm -tT /dev/sda 在磁盘上执行测试性读取操作 &lt;br /&gt;
cat /proc/cpuinfo 显示CPU info的信息 &lt;br /&gt;
cat /proc/interrupts 显示中断 &lt;br /&gt;
cat /proc/meminfo 校验内存使用 &lt;br /&gt;
cat /proc/swaps 显示哪些swap被使用 &lt;br /&gt;
cat /proc/version 显示内核的版本 &lt;br /&gt;
cat /proc/net/dev 显示网络适配器及统计 &lt;br /&gt;
cat /proc/mounts 显示已加载的文件系统 &lt;br /&gt;
lspci -tv 罗列 PCI 设备 &lt;br /&gt;
lsusb -tv 显示 USB 设备 &lt;br /&gt;
date 显示系统日期 &lt;br /&gt;
cal 2007 显示2007年的日历表 &lt;br /&gt;
date 041217002007.00 设置日期和时间 - 月日时分年.秒 &lt;br /&gt;
clock -w 将时间修改保存到 BIOS&lt;/p&gt;

&lt;h1 id=&quot;关机-系统的关机重启以及登出-&quot;&gt;关机 (系统的关机、重启以及登出 )&lt;/h1&gt;
&lt;p&gt;shutdown -h now 关闭系统&lt;br /&gt;
init 0 关闭系统&lt;br /&gt;
telinit 0 关闭系统&lt;br /&gt;
shutdown -h hours:minutes &amp;amp; 按预定时间关闭系统 &lt;br /&gt;
shutdown -c 取消按预定时间关闭系统 &lt;br /&gt;
shutdown -r now 重启&lt;br /&gt;
reboot 重启&lt;br /&gt;
logout 注销&lt;/p&gt;

&lt;h1 id=&quot;文件和目录&quot;&gt;文件和目录&lt;/h1&gt;
&lt;p&gt;cd /home 进入 ‘/ home’ 目录’ &lt;br /&gt;
cd .. 返回上一级目录 &lt;br /&gt;
cd ../.. 返回上两级目录 &lt;br /&gt;
cd 进入个人的主目录 &lt;br /&gt;
cd ~user1 进入个人的主目录&lt;br /&gt;
cd - 返回上次所在的目录 &lt;br /&gt;
pwd 显示工作路径 &lt;br /&gt;
ls 查看目录中的文件 &lt;br /&gt;
ls -F 查看目录中的文件 &lt;br /&gt;
ls -l 显示文件和目录的详细资料 &lt;br /&gt;
ls -a 显示隐藏文件 &lt;br /&gt;
ls &lt;em&gt;[0-9]&lt;/em&gt; 显示包含数字的文件名和目录名 &lt;br /&gt;
tree 显示文件和目录由根目录开始的树形结构&lt;br /&gt;
lstree 显示文件和目录由根目录开始的树形结构&lt;br /&gt;
mkdir dir1 创建一个叫做 ‘dir1’ 的目录’ &lt;br /&gt;
mkdir dir1 dir2 同时创建两个目录 &lt;br /&gt;
mkdir -p /tmp/dir1/dir2 创建一个目录树 &lt;br /&gt;
rm -f file1 删除一个叫做 ‘file1’ 的文件’ &lt;br /&gt;
rmdir dir1 删除一个叫做 ‘dir1’ 的目录’ &lt;br /&gt;
rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容 &lt;br /&gt;
rm -rf dir1 dir2 同时删除两个目录及它们的内容 &lt;br /&gt;
mv dir1 new_dir 重命名/移动 一个目录 &lt;br /&gt;
cp file1 file2 复制一个文件 &lt;br /&gt;
cp dir/* . 复制一个目录下的所有文件到当前工作目录 &lt;br /&gt;
cp -a /tmp/dir1 . 复制一个目录到当前工作目录 &lt;br /&gt;
cp -a dir1 dir2 复制一个目录 &lt;br /&gt;
ln -s file1 lnk1 创建一个指向文件或目录的软链接 &lt;br /&gt;
ln file1 lnk1 创建一个指向文件或目录的物理链接 &lt;br /&gt;
touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm) &lt;br /&gt;
file file1 outputs the mime type of the file as text &lt;br /&gt;
iconv -l 列出已知的编码 &lt;br /&gt;
iconv -f fromEncoding -t toEncoding inputFile &amp;gt; outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding.&lt;/p&gt;

&lt;h1 id=&quot;文件搜索&quot;&gt;文件搜索&lt;/h1&gt;
&lt;p&gt;find / -name file1 从 ‘/’ 开始进入根文件系统搜索文件和目录 &lt;br /&gt;
find / -user user1 搜索属于用户 ‘user1’ 的文件和目录 &lt;br /&gt;
find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件 &lt;br /&gt;
find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件 &lt;br /&gt;
find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件 &lt;br /&gt;
find / -name *.rpm -exec chmod 755 ‘{}’ \; 搜索以 ‘.rpm’ 结尾的文件并定义其权限 &lt;br /&gt;
find / -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备 &lt;br /&gt;
locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令 &lt;br /&gt;
whereis halt 显示一个二进制文件、源码或man的位置 &lt;br /&gt;
which halt 显示一个二进制文件或可执行文件的完整路径&lt;/p&gt;

&lt;h1 id=&quot;挂载一个文件系统&quot;&gt;挂载一个文件系统&lt;/h1&gt;
&lt;p&gt;mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 - 确定目录 ‘/ mnt/hda2’ 已经存在 &lt;br /&gt;
umount /dev/hda2 卸载一个叫做hda2的盘 - 先从挂载点 ‘/ mnt/hda2’ 退出 &lt;br /&gt;
fuser -km /mnt/hda2 当设备繁忙时强制卸载 &lt;br /&gt;
umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用 &lt;br /&gt;
mount /dev/fd0 /mnt/floppy 挂载一个软盘 &lt;br /&gt;
mount /dev/cdrom /mnt/cdrom 挂载一个cdrom或dvdrom &lt;br /&gt;
mount /dev/hdc /mnt/cdrecorder 挂载一个cdrw或dvdrom &lt;br /&gt;
mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom&lt;br /&gt;
mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件 &lt;br /&gt;
mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统 &lt;br /&gt;
mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备 &lt;br /&gt;
mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享&lt;/p&gt;

&lt;h1 id=&quot;磁盘空间&quot;&gt;磁盘空间&lt;/h1&gt;
&lt;p&gt;df -h 显示已经挂载的分区列表 &lt;br /&gt;
ls -lSr |more 以尺寸大小排列文件和目录 &lt;br /&gt;
du -sh dir1 估算目录 ‘dir1’ 已经使用的磁盘空间’ &lt;br /&gt;
du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小 &lt;br /&gt;
rpm -q -a –qf ‘%10{SIZE}t%{NAME}n’ | sort -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统) &lt;br /&gt;
dpkg-query -W -f=’${Installed-Size;10}t${Package}n’ | sort -k1,1n 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统)&lt;/p&gt;

&lt;h1 id=&quot;用户和群组&quot;&gt;用户和群组&lt;/h1&gt;
&lt;p&gt;groupadd group_name 创建一个新用户组 &lt;br /&gt;
groupdel group_name 删除一个用户组 &lt;br /&gt;
groupmod -n new_group_name old_group_name 重命名一个用户组 &lt;br /&gt;
useradd -c “Name Surname “ -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 “admin” 用户组的用户 &lt;br /&gt;
useradd user1 创建一个新用户 &lt;br /&gt;
userdel -r user1 删除一个用户 ( ‘-r’ 排除主目录) &lt;br /&gt;
usermod -c “User FTP” -g system -d /ftp/user1 -s /bin/nologin user1 修改用户属性 &lt;br /&gt;
passwd 修改口令 &lt;br /&gt;
passwd user1 修改一个用户的口令 (只允许root执行) &lt;br /&gt;
chage -E 2005-12-31 user1 设置用户口令的失效期限 &lt;br /&gt;
pwck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的用户 &lt;br /&gt;
grpck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的群组 &lt;br /&gt;
newgrp group_name 登陆进一个新的群组以改变新创建文件的预设群组&lt;/p&gt;

&lt;h1 id=&quot;文件的权限---使用--设置权限使用---用于取消&quot;&gt;文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消&lt;/h1&gt;
&lt;p&gt;ls -lh 显示权限 &lt;br /&gt;
ls /tmp | pr -T5 -W$COLUMNS 将终端划分成5栏显示 &lt;br /&gt;
chmod ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限 &lt;br /&gt;
chmod go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限&lt;br /&gt;
chown user1 file1 改变一个文件的所有人属性 &lt;br /&gt;
chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性 &lt;br /&gt;
chgrp group1 file1 改变文件的群组 &lt;br /&gt;
chown user1:group1 file1 改变一个文件的所有人和群组属性 &lt;br /&gt;
find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件 &lt;br /&gt;
chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限 &lt;br /&gt;
chmod u-s /bin/file1 禁用一个二进制文件的 SUID位 &lt;br /&gt;
chmod g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的 &lt;br /&gt;
chmod g-s /home/public 禁用一个目录的 SGID 位 &lt;br /&gt;
chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件 &lt;br /&gt;
chmod o-t /home/public 禁用一个目录的 STIKY 位&lt;/p&gt;

&lt;h1 id=&quot;文件的特殊属性---使用--设置权限使用---用于取消&quot;&gt;文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消&lt;/h1&gt;
&lt;p&gt;chattr +a file1 只允许以追加方式读写文件 &lt;br /&gt;
chattr +c file1 允许这个文件能被内核自动压缩/解压 &lt;br /&gt;
chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件 &lt;br /&gt;
chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接 &lt;br /&gt;
chattr +s file1 允许一个文件被安全地删除 &lt;br /&gt;
chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘 &lt;br /&gt;
chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件 &lt;br /&gt;
lsattr 显示特殊的属性&lt;/p&gt;

&lt;h1 id=&quot;打包和压缩文件&quot;&gt;打包和压缩文件&lt;/h1&gt;
&lt;p&gt;gzip file1 压缩一个叫做 ‘file1’的文件 &lt;br /&gt;
gzip -9 file1 最大程度压缩 &lt;br /&gt;
tar -cvf archive.tar file1 创建一个非压缩的 tarball &lt;br /&gt;
tar -cvf archive.tar file1 file2 dir1 创建一个包含了 ‘file1’, ‘file2’ 以及 ‘dir1’的档案文件 &lt;br /&gt;
tar -tf archive.tar 显示一个包中的内容 &lt;br /&gt;
tar -xvf archive.tar 释放一个包 &lt;br /&gt;
tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下 &lt;br /&gt;
tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包 &lt;br /&gt;
tar -jxvf archive.tar.bz2 解压一个bzip2格式的压缩包 &lt;br /&gt;
tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包 &lt;br /&gt;
tar -zxvf archive.tar.gz 解压一个gzip格式的压缩包 &lt;br /&gt;
zip file1.zip file1 创建一个zip格式的压缩包 &lt;br /&gt;
zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包 &lt;br /&gt;
unzip file1.zip 解压一个zip格式压缩包&lt;/p&gt;

&lt;h1 id=&quot;rpm-包---fedora-redhat及类似系统&quot;&gt;RPM 包 - （Fedora, Redhat及类似系统）&lt;/h1&gt;
&lt;p&gt;rpm -ivh package.rpm 安装一个rpm包 &lt;br /&gt;
rpm -ivh –nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告 &lt;br /&gt;
rpm -U package.rpm 更新一个rpm包但不改变其配置文件 &lt;br /&gt;
rpm -F package.rpm 更新一个确定已经安装的rpm包 &lt;br /&gt;
rpm -e package_name.rpm 删除一个rpm包 &lt;br /&gt;
rpm -qa 显示系统中所有已经安装的rpm包 &lt;br /&gt;
rpm -qa | grep httpd 显示所有名称中包含 “httpd” 字样的rpm包 &lt;br /&gt;
rpm -qi package_name 获取一个已安装包的特殊信息 &lt;br /&gt;
rpm -qg “System Environment/Daemons” 显示一个组件的rpm包 &lt;br /&gt;
rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表 &lt;br /&gt;
rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表 &lt;br /&gt;
rpm -q package_name –whatrequires 显示与一个rpm包存在依赖关系的列表 &lt;br /&gt;
rpm -q package_name –whatprovides 显示一个rpm包所占的体积 &lt;br /&gt;
rpm -q package_name –scripts 显示在安装/删除期间所执行的脚本l &lt;br /&gt;
rpm -q package_name –changelog 显示一个rpm包的修改历史 &lt;br /&gt;
rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供 &lt;br /&gt;
rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表 &lt;br /&gt;
rpm –import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书 &lt;br /&gt;
rpm –checksig package.rpm 确认一个rpm包的完整性 &lt;br /&gt;
rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性 &lt;br /&gt;
rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间 &lt;br /&gt;
rpm -Va 检查系统中所有已安装的rpm包- 小心使用 &lt;br /&gt;
rpm -Vp package.rpm 确认一个rpm包还未安装 &lt;br /&gt;
rpm -ivh /usr/src/redhat/RPMS/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arch&lt;/code&gt;/package.rpm 从一个rpm源码安装一个构建好的包 &lt;br /&gt;
rpmbuild –rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包&lt;/p&gt;

&lt;h1 id=&quot;yum-软件包升级器---fedora-redhat及类似系统&quot;&gt;YUM 软件包升级器 - （Fedora, RedHat及类似系统）&lt;/h1&gt;
&lt;p&gt;yum install package_name 下载并安装一个rpm包 &lt;br /&gt;
yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系 &lt;br /&gt;
yum update package_name.rpm 更新当前系统中所有安装的rpm包 &lt;br /&gt;
yum update package_name 更新一个rpm包 &lt;br /&gt;
yum remove package_name 删除一个rpm包 &lt;br /&gt;
yum list 列出当前系统中安装的所有包 &lt;br /&gt;
yum search package_name 在rpm仓库中搜寻软件包 &lt;br /&gt;
yum clean packages 清理rpm缓存删除下载的包 &lt;br /&gt;
yum clean headers 删除所有头文件 &lt;br /&gt;
yum clean all 删除所有缓存的包和头文件&lt;/p&gt;

&lt;h1 id=&quot;查看文件内容&quot;&gt;查看文件内容&lt;/h1&gt;
&lt;p&gt;cat file1 从第一个字节开始正向查看文件的内容 &lt;br /&gt;
tac file1 从最后一行开始反向查看一个文件的内容 &lt;br /&gt;
more file1 查看一个长文件的内容 &lt;br /&gt;
less file1 类似于 ‘more’ 命令，但是它允许在文件中和正向操作一样的反向操作 &lt;br /&gt;
head -2 file1 查看一个文件的前两行 &lt;br /&gt;
tail -2 file1 查看一个文件的最后两行 &lt;br /&gt;
tail -f /var/log/messages 实时查看被添加到一个文件中的内容&lt;/p&gt;

&lt;h1 id=&quot;文本处理&quot;&gt;文本处理&lt;/h1&gt;
&lt;p&gt;cat file1 file2 … | command &amp;lt;&amp;gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT &lt;br /&gt;
cat file1 | command( sed, grep, awk, grep, etc…) &amp;gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中 &lt;br /&gt;
cat file1 | command( sed, grep, awk, grep, etc…) » result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中 &lt;br /&gt;
grep Aug /var/log/messages 在文件 ‘/var/log/messages’中查找关键词”Aug” &lt;br /&gt;
grep ^Aug /var/log/messages 在文件 ‘/var/log/messages’中查找以”Aug”开始的词汇 &lt;br /&gt;
grep [0-9] /var/log/messages 选择 ‘/var/log/messages’ 文件中所有包含数字的行 &lt;br /&gt;
grep Aug -R /var/log/* 在目录 ‘/var/log’ 及随后的目录中搜索字符串”Aug” &lt;br /&gt;
sed ‘s/stringa1/stringa2/g’ example.txt 将example.txt文件中的 “string1” 替换成 “string2” &lt;br /&gt;
sed ‘/^$/d’ example.txt 从example.txt文件中删除所有空白行 &lt;br /&gt;
sed ‘/ &lt;em&gt;#/d; /^$/d’ example.txt 从example.txt文件中删除所有注释和空白行 &lt;br /&gt;
echo ‘esempio’ | tr ‘[:lower:]’ ‘[:upper:]’ 合并上下单元格内容 &lt;br /&gt;
sed -e ‘1d’ result.txt 从文件example.txt 中排除第一行 &lt;br /&gt;
sed -n ‘/stringa1/p’ 查看只包含词汇 “string1”的行 &lt;br /&gt;
sed -e ‘s/ *$//’ example.txt 删除每一行最后的空白字符 &lt;br /&gt;
sed -e ‘s/stringa1//g’ example.txt 从文档中只删除词汇 “string1” 并保留剩余全部 &lt;br /&gt;
sed -n ‘1,5p;5q’ example.txt 查看从第一行到第5行内容 &lt;br /&gt;
sed -n ‘5p;5q’ example.txt 查看第5行 &lt;br /&gt;
sed -e ‘s/00&lt;/em&gt;/0/g’ example.txt 用单个零替换多个零 &lt;br /&gt;
cat -n file1 标示文件的行数 &lt;br /&gt;
cat example.txt | awk ‘NR%2==1’ 删除example.txt文件中的所有偶数行 &lt;br /&gt;
echo a b c | awk ‘{print $1}’ 查看一行第一栏 &lt;br /&gt;
echo a b c | awk ‘{print $1,$3}’ 查看一行的第一和第三栏 &lt;br /&gt;
paste file1 file2 合并两个文件或两栏的内容 &lt;br /&gt;
paste -d ‘+’ file1 file2 合并两个文件或两栏的内容，中间用”+”区分 &lt;br /&gt;
sort file1 file2 排序两个文件的内容 &lt;br /&gt;
sort file1 file2 | uniq 取出两个文件的并集(重复的行只保留一份) &lt;br /&gt;
sort file1 file2 | uniq -u 删除交集，留下其他的行 &lt;br /&gt;
sort file1 file2 | uniq -d 取出两个文件的交集(只留下同时存在于两个文件中的文件) &lt;br /&gt;
comm -1 file1 file2 比较两个文件的内容只删除 ‘file1’ 所包含的内容 &lt;br /&gt;
comm -2 file1 file2 比较两个文件的内容只删除 ‘file2’ 所包含的内容 &lt;br /&gt;
comm -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分&lt;/p&gt;

&lt;h1 id=&quot;字符设置和文件格式转换&quot;&gt;字符设置和文件格式转换&lt;/h1&gt;
&lt;p&gt;dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX &lt;br /&gt;
unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS &lt;br /&gt;
recode ..HTML &amp;lt; page.txt &amp;gt; page.html 将一个文本文件转换成html &lt;br /&gt;
recode -l | more 显示所有允许的转换格式&lt;/p&gt;

&lt;h1 id=&quot;文件系统分析&quot;&gt;文件系统分析&lt;/h1&gt;
&lt;p&gt;badblocks -v /dev/hda1 检查磁盘hda1上的坏磁块 &lt;br /&gt;
fsck /dev/hda1 修复/检查hda1磁盘上linux文件系统的完整性 &lt;br /&gt;
fsck.ext2 /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性 &lt;br /&gt;
e2fsck /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性 &lt;br /&gt;
e2fsck -j /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性 &lt;br /&gt;
fsck.ext3 /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性 &lt;br /&gt;
fsck.vfat /dev/hda1 修复/检查hda1磁盘上fat文件系统的完整性 &lt;br /&gt;
fsck.msdos /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性 &lt;br /&gt;
dosfsck /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性&lt;/p&gt;

&lt;h1 id=&quot;初始化一个文件系统&quot;&gt;初始化一个文件系统&lt;/h1&gt;
&lt;p&gt;mkfs /dev/hda1 在hda1分区创建一个文件系统 &lt;br /&gt;
mke2fs /dev/hda1 在hda1分区创建一个linux ext2的文件系统 &lt;br /&gt;
mke2fs -j /dev/hda1 在hda1分区创建一个linux ext3(日志型)的文件系统 &lt;br /&gt;
mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统 &lt;br /&gt;
fdformat -n /dev/fd0 格式化一个软盘 &lt;br /&gt;
mkswap /dev/hda3 创建一个swap文件系统&lt;/p&gt;

&lt;h1 id=&quot;swap文件系统&quot;&gt;SWAP文件系统&lt;/h1&gt;
&lt;p&gt;mkswap /dev/hda3 创建一个swap文件系统 &lt;br /&gt;
swapon /dev/hda3 启用一个新的swap文件系统 &lt;br /&gt;
swapon /dev/hda2 /dev/hdb3 启用两个swap分区&lt;/p&gt;

&lt;h1 id=&quot;备份&quot;&gt;备份&lt;/h1&gt;
&lt;p&gt;dump -0aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的完整备份 &lt;br /&gt;
dump -1aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的交互式备份 &lt;br /&gt;
restore -if /tmp/home0.bak 还原一个交互式备份 &lt;br /&gt;
rsync -rogpav –delete /home /tmp 同步两边的目录 &lt;br /&gt;
rsync -rogpav -e ssh –delete /home ip_address:/tmp 通过SSH通道rsync &lt;br /&gt;
rsync -az -e ssh –delete ip_addr:/home/public /home/local 通过ssh和压缩将一个远程目录同步到本地目录 &lt;br /&gt;
rsync -az -e ssh –delete /home/local ip_addr:/home/public 通过ssh和压缩将本地目录同步到远程目录 &lt;br /&gt;
dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr ‘dd of=hda.gz’ 通过ssh在远程主机上执行一次备份本地磁盘的操作 &lt;br /&gt;
dd if=/dev/sda of=/tmp/file1 备份磁盘内容到一个文件 &lt;br /&gt;
tar -Puf backup.tar /home/user 执行一次对 ‘/home/user’ 目录的交互式备份操作 &lt;br /&gt;
( cd /tmp/local/ &amp;amp;&amp;amp; tar c . ) | ssh -C user@ip_addr ‘cd /home/share/ &amp;amp;&amp;amp; tar x -p’ 通过ssh在远程目录中复制一个目录内容 &lt;br /&gt;
( tar c /home ) | ssh -C user@ip_addr ‘cd /home/backup-home &amp;amp;&amp;amp; tar x -p’ 通过ssh在远程目录中复制一个本地目录 &lt;br /&gt;
tar cf - . | (cd /tmp/backup ; tar xf - ) 本地将一个目录复制到另一个地方，保留原有权限及链接 &lt;br /&gt;
find /home/user1 -name ‘*.txt’ | xargs cp -av –target-directory=/home/backup/ –parents 从一个目录查找并复制所有以 ‘.txt’ 结尾的文件到另一个目录 &lt;br /&gt;
find /var/log -name ‘*.log’ | tar cv –files-from=- | bzip2 &amp;gt; log.tar.bz2 查找所有以 ‘.log’ 结尾的文件并做成一个bzip包 &lt;br /&gt;
dd if=/dev/hda of=/dev/fd0 bs=512 count=1 做一个将 MBR (Master Boot Record)内容复制到软盘的动作 &lt;br /&gt;
dd if=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容&lt;/p&gt;

&lt;h1 id=&quot;网络---以太网和wifi无线&quot;&gt;网络 - （以太网和WIFI无线）&lt;/h1&gt;
&lt;p&gt;ifconfig eth0 显示一个以太网卡的配置 &lt;br /&gt;
ifup eth0 启用一个 ‘eth0’ 网络设备 &lt;br /&gt;
ifdown eth0 禁用一个 ‘eth0’ 网络设备 &lt;br /&gt;
ifconfig eth0 192.168.1.1 netmask 255.255.255.0 控制IP地址 &lt;br /&gt;
ifconfig eth0 promisc 设置 ‘eth0’ 成混杂模式以嗅探数据包 (sniffing) &lt;br /&gt;
dhclient eth0 以dhcp模式启用 ‘eth0’ &lt;br /&gt;
route -n show routing table &lt;br /&gt;
route add -net 0/0 gw IP_Gateway configura default gateway &lt;br /&gt;
route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network ‘192.168.0.0/16’ &lt;br /&gt;
route del 0/0 gw IP_gateway remove static route &lt;br /&gt;
echo “1” &amp;gt; /proc/sys/net/ipv4/ip_forward activate ip routing &lt;br /&gt;
hostname show hostname of system &lt;br /&gt;
host www.example.com lookup hostname to resolve name to ip address and viceversa&lt;br /&gt;
nslookup www.example.com lookup hostname to resolve name to ip address and viceversa&lt;br /&gt;
ip link show show link status of all interfaces &lt;br /&gt;
mii-tool eth0 show link status of ‘eth0’ &lt;br /&gt;
ethtool eth0 show statistics of network card ‘eth0’ &lt;br /&gt;
netstat -tup show all active network connections and their PID &lt;br /&gt;
netstat -tupl show all network services listening on the system and their PID &lt;br /&gt;
tcpdump tcp port 80 show all HTTP traffic &lt;br /&gt;
iwlist scan show wireless networks &lt;br /&gt;
iwconfig eth1 show configuration of a wireless network card &lt;br /&gt;
hostname show hostname &lt;br /&gt;
host www.example.com lookup hostname to resolve name to ip address and viceversa&lt;br /&gt;
nslookup www.example.com lookup hostname to resolve name to ip address and viceversa &lt;br /&gt;
whois www.example.com lookup on Whois database&lt;/p&gt;

</description>
        <pubDate>Fri, 12 Jul 2019 00:08:00 +0800</pubDate>
        <link>https://ljw718.github.io//2019/07/12/About-Linux-CMD/</link>
        <guid isPermaLink="true">https://ljw718.github.io//2019/07/12/About-Linux-CMD/</guid>
        
        <category>Linux常用shell命令</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>基于Linux下的C函数使用</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1gb2312与utf-8互转&quot; id=&quot;markdown-toc-1gb2312与utf-8互转&quot;&gt;1、GB2312与UTF-8互转&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2strtok函数&quot; id=&quot;markdown-toc-2strtok函数&quot;&gt;2、strtok()函数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本篇博客是介绍C语言中一些常用、易用错的函数的使用方法,每个函数使用都以实例展示,并且都是在项目中实际用到过,持续更新…&lt;/p&gt;

&lt;h1 id=&quot;1gb2312与utf-8互转&quot;&gt;1、GB2312与UTF-8互转&lt;/h1&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;iconv.h&amp;gt;
int code_convert(char *from_charset,char *to_charset,char *inbuf,int inlen,char *outbuf,int outlen)
{
​	iconv_t cd = NULL;
​	//int rc;
​	char **pin = &amp;amp;inbuf;
​	char **pout = &amp;amp;outbuf;
​	cd = iconv_open(to_charset,from_charset);
​	if(cd == (void *)-1)
​	{
​		return FAIL;
​	}
​	size_t n = iconv(cd,pin,&amp;amp;inlen,pout,&amp;amp;outlen);  //iconv返回转换期间不可转换字符的数量
​	if(n &amp;lt; 0)
​	{
​		return FAIL;
​	}
​	iconv_close(cd);
	return SUC;
}

//UNICODE码转为GB2312码
int u2g(char *inbuf,int inlen,char *outbuf,int outlen)
{
​	return code_convert(&quot;utf-8&quot;,&quot;gb2312&quot;,inbuf,inlen,outbuf,outlen);
}

//GB2312码转为UNICODE码
int g2u(char *inbuf,size_t inlen,char *outbuf,size_t outlen)
{
	return code_convert(&quot;gb2312&quot;,&quot;utf-8&quot;,inbuf,inlen,outbuf,outlen);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;2strtok函数&quot;&gt;2、strtok()函数&lt;/h1&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;
#include&amp;lt;string.h&amp;gt;
int main(void)
{
​    char buf[]=&quot;hello@boy@this@is@heima&quot;;
​    char*temp = strtok(buf,&quot;@&quot;);
​    while(temp)
​    {
​        printf(&quot;%s &quot;,temp);
​        temp = strtok(NULL,&quot;@&quot;);
​    }
​    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 25 Jun 2019 22:58:01 +0800</pubDate>
        <link>https://ljw718.github.io//2019/06/25/About-Linux-C/</link>
        <guid isPermaLink="true">https://ljw718.github.io//2019/06/25/About-Linux-C/</guid>
        
        <category>C函数</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>Jekyll安装步骤&amp;目录结构</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#一背景&quot; id=&quot;markdown-toc-一背景&quot;&gt;一、背景&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#二什么是jekyll&quot; id=&quot;markdown-toc-二什么是jekyll&quot;&gt;二、什么是jekyll？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#三jekyll安装&quot; id=&quot;markdown-toc-三jekyll安装&quot;&gt;三、jekyll安装&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1winrdos安装&quot; id=&quot;markdown-toc-1winrdos安装&quot;&gt;1、(win+R)DOS安装&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2shell命令安装&quot; id=&quot;markdown-toc-2shell命令安装&quot;&gt;2、Shell命令安装&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#四jekyll目录结构&quot; id=&quot;markdown-toc-四jekyll目录结构&quot;&gt;四、jekyll目录结构&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#五jekyll安装常见问题&quot; id=&quot;markdown-toc-五jekyll安装常见问题&quot;&gt;五、jekyll安装常见问题&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#gem证书错误&quot; id=&quot;markdown-toc-gem证书错误&quot;&gt;Gem 证书错误&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;一背景&quot;&gt;一、背景&lt;/h2&gt;
&lt;p&gt;由于最近换了新电脑，之前的Jekyll环境用不了了，但是之前创建的仓库&lt;a href=&quot;http://ljw718.github.io&quot;&gt;https://LJW718.github.io&lt;/a&gt; 依然是可以访问的，所以需要在新电脑上重新安装。&lt;/p&gt;

&lt;h2 id=&quot;二什么是jekyll&quot;&gt;二、什么是jekyll？&lt;/h2&gt;

&lt;p&gt;首先解释下什么是jekyll，jekyll相当于一个编译工具，安装好jekyll后，你可以通过jekyll创建一个网站模板，创建好之后，我们就可以通过http://127.0.0.1:4000/ 访问刚刚创建的网站了（具体jekyll用法后面再介绍），我们可以实时修改刚刚创建的模板里面的内容，并可以实时通过本地url预览改动后的效果。我们把这个博客推送到上一步创建的代码仓库里，再通过https://ljw718.github.io/ 就可以访问到博客里面的内容了。有了Jekyll，我们不用每次改动一点点就把代码推送到仓库中进行预览，而是本地就可以预览。GitHub支持jekyll，hexo等语法解析。
那么如何安装jekyll呢？我这边暂只讲解windows下的安装步骤。&lt;/p&gt;

&lt;h2 id=&quot;三jekyll安装&quot;&gt;三、jekyll安装&lt;/h2&gt;

&lt;p&gt;首先进入官网点击下载安装&lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;Ruby installer&lt;/a&gt;;  或者用阿里云盘下载：&lt;a href=&quot;https://www.aliyundrive.com/s/C6ULdQDbome&quot;&gt;Ruby2.6.1.1&lt;/a&gt;
点击下载&lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt;, 或者用阿里云盘下载：&lt;a href=&quot;https://www.aliyundrive.com/s/KkiH9ftS3ZY&quot;&gt;[RubyGems3.0.2]&lt;/a&gt; , 不建议下载最新的版本，可能存在兼容性问题， 用我的这两个链接下载即可，亲测有效。下载完成后解压至你想放的位置,&lt;/p&gt;

&lt;p&gt;例如我放到E:\rubygems-3.0.2。&lt;/p&gt;

&lt;h3 id=&quot;1winrdos安装&quot;&gt;1、(win+R)DOS安装&lt;/h3&gt;
&lt;p&gt;打开命令行执行,进入到解压包的位置：cd E:\rubygems-3.0.2 &lt;br /&gt;
E:&lt;br /&gt;
ruby setup.rb&lt;br /&gt;
在命令行执行gem install jekyll；&lt;br /&gt;
安装完成，我们可以用jekyll命令创建一个博客模板,打开命令行执行：  &lt;br /&gt;
cd d:  &lt;br /&gt;
d:  &lt;br /&gt;
jekyll new testblog&lt;br /&gt;
cd testblog&lt;br /&gt;
jekyll server&lt;/p&gt;

&lt;h3 id=&quot;2shell命令安装&quot;&gt;2、Shell命令安装&lt;/h3&gt;
&lt;p&gt;熟悉Linux的朋友应该不陌生，我们先安装一个可以在windows下敲shell命令的工具，我们拿Git-bash为例(Git命令行输入工具),兼容部分shell命令,然后在git-bash终端完成jekyll安装以及启动。&lt;br /&gt;
打开命令行执行,进入到解压包的位置：cd E:\rubygems-3.0.2 &lt;br /&gt;
ruby setup.rb&lt;br /&gt;
在命令行执行gem install jekyll；&lt;br /&gt;
安装完成，我们可以用jekyll命令创建一个博客模板,打开命令行执行：  &lt;br /&gt;
cd d:    &lt;br /&gt;
jekyll new testblog&lt;br /&gt;
cd testblog&lt;br /&gt;
jekyll server&lt;br /&gt;
操作和DOS命令基本一致，个人习惯使用Linux命令。&lt;/p&gt;

&lt;p&gt;在浏览器输入http://127.0.0.1:4000/ 即可浏览刚刚创建的blog&lt;br /&gt;
到此jekyll 就安装完成了。&lt;/p&gt;

&lt;h2 id=&quot;四jekyll目录结构&quot;&gt;四、jekyll目录结构&lt;/h2&gt;
&lt;p&gt;jekyll目录结构主要包含如下目录：&lt;br /&gt;
_posts 博客内容&lt;br /&gt;
_pages 其他需要生成的网页，如About页&lt;br /&gt;
_layouts 网页排版模板&lt;br /&gt;
_includes 被模板包含的HTML片段，可在_config.yml中修改位置&lt;br /&gt;
assets 辅助资源 css布局 js脚本 图片等&lt;br /&gt;
_data 动态数据&lt;br /&gt;
_sites 最终生成的静态网页&lt;br /&gt;
_config.yml 网站的一些配置信息&lt;br /&gt;
index.html 网站的入口&lt;/p&gt;

&lt;h2 id=&quot;五jekyll安装常见问题&quot;&gt;五、jekyll安装常见问题&lt;/h2&gt;

&lt;h3 id=&quot;gem证书错误&quot;&gt;Gem 证书错误&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/styles/images/Other/图片 2.png&quot; alt=&quot;p1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1.先查看证书默认位置,系统,安装不一样可能导致证书查找位置不同&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby -e &quot;require 'openssl'; puts OpenSSL::X509::DEFAULT_CERT_FILE&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/Other/图片 4.png&quot; alt=&quot;p2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;比如检查出地址是 D:/Ruby30-x64/ssl/cert.pem , 备份一下cert_bak.pem&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/Other/图片 6.png&quot; alt=&quot;p3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl -o  D:\Ruby30-x64\ssl\aaa.pem  https://curl.haxx.se/ca/cacert.pem&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/Other/图片 11.png&quot; alt=&quot;p4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一次不行， 多试几次。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/Other/图片 8.png&quot; alt=&quot;p5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击aaa中的html链接， 下载证书&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/Other/图片 7.png&quot; alt=&quot;p6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;将证书名字改成cert.pem,证书配置完成&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gem source -a https://rubygems.org/&lt;/code&gt;  （修改Ruby的gem源，默认的源， 之前删除了）&lt;/p&gt;

&lt;p&gt;安装jekyll:    &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gem install jekyll&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/Other/图片 9.png&quot; alt=&quot;p7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/Other/图片 5.png&quot; alt=&quot;p8&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 23 Jun 2019 18:01:01 +0800</pubDate>
        <link>https://ljw718.github.io//2019/06/23/jekyll-install/</link>
        <guid isPermaLink="true">https://ljw718.github.io//2019/06/23/jekyll-install/</guid>
        
        <category>jekyll</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Markdown基础语法学习 ！</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#markdown简介及扩展&quot; id=&quot;markdown-toc-markdown简介及扩展&quot;&gt;&lt;strong&gt;Markdown简介及扩展&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#常用语法&quot; id=&quot;markdown-toc-常用语法&quot;&gt;&lt;strong&gt;常用语法&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#一标题&quot; id=&quot;markdown-toc-一标题&quot;&gt;一、标题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#二字体&quot; id=&quot;markdown-toc-二字体&quot;&gt;二、字体&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#三引用&quot; id=&quot;markdown-toc-三引用&quot;&gt;三、引用&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#四分割线&quot; id=&quot;markdown-toc-四分割线&quot;&gt;四、分割线&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#五图片&quot; id=&quot;markdown-toc-五图片&quot;&gt;五、图片&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#六超链接&quot; id=&quot;markdown-toc-六超链接&quot;&gt;六、超链接&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#七列表&quot; id=&quot;markdown-toc-七列表&quot;&gt;七、列表&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#八表格&quot; id=&quot;markdown-toc-八表格&quot;&gt;八、表格&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#九代码块&quot; id=&quot;markdown-toc-九代码块&quot;&gt;九、代码块&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#十流程图&quot; id=&quot;markdown-toc-十流程图&quot;&gt;十、流程图&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#浏览器兼容&quot; id=&quot;markdown-toc-浏览器兼容&quot;&gt;&lt;strong&gt;浏览器兼容&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这是一篇关于Markdown语法的博客&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;markdown简介及扩展&quot;&gt;&lt;strong&gt;Markdown简介及扩展&lt;/strong&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— &lt;a href=&quot;https://zh.wikipedia.org/wiki/Markdown&quot; target=&quot;_blank&quot;&gt; [ 维基百科 ]&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;常用语法&quot;&gt;&lt;strong&gt;常用语法&lt;/strong&gt;&lt;/h2&gt;
&lt;h2 id=&quot;一标题&quot;&gt;一、标题&lt;/h2&gt;
&lt;p&gt;在想要设置为标题的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;文字前面加#&lt;/code&gt;来表示, 一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。
注：标准语法一般在#后跟个空格再写文字,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;在内容末尾敲**2个空格**+**回车**进行换行&lt;/code&gt;&lt;br /&gt;
示例：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 这是一级标题
## 这是二级标题
### 这是三级标题
#### 这是四级标题
##### 这是五级标题
###### 这是六级标题
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;二字体&quot;&gt;二、字体&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;加粗&lt;/strong&gt;   要加粗的文字左右分别用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2个*号&lt;/code&gt;包起来&lt;br /&gt;
&lt;em&gt;斜体&lt;/em&gt;    要倾斜的文字左右分别用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1个*号&lt;/code&gt;包起来&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;斜体加粗&lt;/em&gt;&lt;/strong&gt;  要倾斜和加粗的文字左右分别用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3个*号&lt;/code&gt;包起来&lt;br /&gt;
&lt;del&gt;删除线&lt;/del&gt;    要加删除线的文字左右分别用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2个~~号&lt;/code&gt;包起来&lt;/p&gt;

&lt;h2 id=&quot;三引用&quot;&gt;三、引用&lt;/h2&gt;
&lt;p&gt;在引用的文字前加&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;即可。引用也可以嵌套，如加两个»三个»&amp;gt; n个…貌似&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;可以一直加下去&lt;/code&gt;,&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;我是一级引用&lt;/p&gt;
  &lt;blockquote&gt;
    &lt;p&gt;我是二级引用&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;blockquote&gt;
          &lt;blockquote&gt;
            &lt;blockquote&gt;
              &lt;blockquote&gt;
                &lt;blockquote&gt;
                  &lt;p&gt;我TM是多少级引用？算了,暂时没啥卵用&lt;/p&gt;
                &lt;/blockquote&gt;
              &lt;/blockquote&gt;
            &lt;/blockquote&gt;
          &lt;/blockquote&gt;
        &lt;/blockquote&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;四分割线&quot;&gt;四、分割线&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;三个或者三个以上的 - 或者 * &lt;/code&gt;都可以,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;---&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*******&lt;/code&gt;显示效果都一样。示例： 三个-&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;五图片&quot;&gt;五、图片&lt;/h2&gt;
&lt;p&gt;语法：
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;![图片alt](图片地址 ''图片title'')&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;图片alt就是显示在图片下面的文字，相当于对图片内容的解释。&lt;br /&gt;
图片地址可以为网上的地址，也可以是styles/images/下图片的绝对路径&lt;br /&gt;
图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加 &lt;br /&gt;
示例：&lt;br /&gt;
&lt;img src=&quot;https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/
u=702257389,1274025419&amp;amp;fm=27&amp;amp;gp=0.jpg&quot; alt=&quot;blockchain&quot; title=&quot;区块链&amp;lt;图片来自网络&amp;gt;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;六超链接&quot;&gt;六、超链接&lt;/h2&gt;
&lt;p&gt;语法：&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[超链接名](超链接地址 &quot;超链接title&quot;)&lt;/code&gt;  title可加可不加&lt;/p&gt;

&lt;p&gt;示例：&lt;br /&gt;
&lt;a href=&quot;http://www.github.com&quot;&gt;Github官网&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll官网&lt;/a&gt;&lt;br /&gt;
注：Markdown本身语法不支持链接在新页面中打开,如果想要在新页面中打开的话可以用html语言的a标签代替。
示例：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;a href=&quot;https://github.com/LJW718/LJW718.github.io&quot; target=&quot;_blank&quot;&amp;gt;本项目&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://github.com/LJW718/LJW718.github.io&quot; target=&quot;_blank&quot;&gt;本项目&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;七列表&quot;&gt;七、列表&lt;/h2&gt;

&lt;p&gt;(1)无序列表&lt;br /&gt;
语法：
无序列表 在列表前加 - + * 任何一种都可以&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;列表内容&lt;/li&gt;
  &lt;li&gt;列表内容&lt;/li&gt;
  &lt;li&gt;列表内容&lt;br /&gt;
注意：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;- + * 跟内容之间都要有一个空格&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(2)有序列表&lt;br /&gt;
语法：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;数字+.+列表内容&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;列表内容&lt;/li&gt;
  &lt;li&gt;列表内容&lt;/li&gt;
  &lt;li&gt;列表内容&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;注意：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;序号跟内容之间要有空格&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;(3)列表嵌套
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;上一级和下一级之间敲三个空格&lt;/code&gt;即可&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;一级无序列表内容
    &lt;ul&gt;
      &lt;li&gt;二级无序列表内容&lt;/li&gt;
      &lt;li&gt;二级无序列表内容&lt;/li&gt;
      &lt;li&gt;二级无序列表内容&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;一级无序列表内容
    &lt;ol&gt;
      &lt;li&gt;二级有序列表内容&lt;/li&gt;
      &lt;li&gt;二级有序列表内容&lt;/li&gt;
      &lt;li&gt;二级有序列表内容&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;一级有序列表内容
    &lt;ul&gt;
      &lt;li&gt;二级无序列表内容&lt;/li&gt;
      &lt;li&gt;二级无序列表内容&lt;/li&gt;
      &lt;li&gt;二级无序列表内容&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;一级有序列表内容
    &lt;ol&gt;
      &lt;li&gt;二级有序列表内容&lt;/li&gt;
      &lt;li&gt;二级有序列表内容&lt;/li&gt;
      &lt;li&gt;二级有序列表内容&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;dl&gt;
  &lt;dt&gt;&lt;strong&gt;Markdown　Extra&lt;/strong&gt;　定义列表语法：&lt;/dt&gt;
  &lt;dt&gt;项目３&lt;/dt&gt;
  &lt;dd&gt;定义 1
    &lt;blockquote&gt;
      &lt;p&gt;定义1内容&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
&lt;/dl&gt;

&lt;h2 id=&quot;八表格&quot;&gt;八、表格&lt;/h2&gt;
&lt;p&gt;语法：&lt;br /&gt;
表头|表头|表头&lt;br /&gt;
—|:–:|—:&lt;br /&gt;
内容|内容|内容&lt;br /&gt;
内容|内容|内容&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;第二行分割表头和内容&lt;/code&gt;。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-&lt;/code&gt; 有一个就行，为了对齐，多加了几个,文字默认居左&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;------两边&lt;/code&gt;加&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;：&lt;/code&gt;表示文字&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;居中&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;------右边&lt;/code&gt;加&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;：&lt;/code&gt;表示文字&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;居右&lt;/code&gt;&lt;br /&gt;
注：原生的语法两边都要用 | 包起来。&lt;/p&gt;

&lt;p&gt;示例1:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;姓名&lt;/th&gt;
      &lt;th&gt;技能&lt;/th&gt;
      &lt;th&gt;排行&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;刘备&lt;/td&gt;
      &lt;td&gt;哭&lt;/td&gt;
      &lt;td&gt;大哥&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;关羽&lt;/td&gt;
      &lt;td&gt;打&lt;/td&gt;
      &lt;td&gt;二哥&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;张飞&lt;/td&gt;
      &lt;td&gt;骂&lt;/td&gt;
      &lt;td&gt;三弟&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;示例2：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;项目&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;价格&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;数量&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Computer&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1600 元&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Phone&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12 元&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Pipe&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1 元&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;234&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;九代码块&quot;&gt;九、代码块&lt;/h2&gt;
&lt;p&gt;语法：&lt;br /&gt;
单行代码：代码之间分别用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1个反引号包起来&lt;/code&gt; &lt;br /&gt;
代码块：代码之间分别用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3个反引号包起来，且两边的反引号单独占一行&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  代码...  
  代码...  
  代码... 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;示例：
单行代码
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create database hero;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;代码块&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    function func(){
         echo &quot;Hello World !&quot;;
    }
    fun();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;十流程图&quot;&gt;十、流程图&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-flow&quot;&gt;st=&amp;gt;start: 开始
op=&amp;gt;operation: My Operation
cond=&amp;gt;condition: Yes or No?
e=&amp;gt;end
st-&amp;gt;op-&amp;gt;cond
cond(yes)-&amp;gt;e
cond(no)-&amp;gt;op
&amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;!--
### 十一、脚注
生成一个脚注[^footnote]    
[^footnote]: 这里是 **脚注** 的 *内容*.  

### 目录
用 `[TOC]`来生成目录：

[TOC]

### 数学公式
### UML 图:

--&gt;

&lt;h2 id=&quot;浏览器兼容&quot;&gt;&lt;strong&gt;浏览器兼容&lt;/strong&gt;&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;目前，本编辑器对Chrome浏览器支持最为完整。建议大家使用较新版本的Chrome。&lt;/li&gt;
  &lt;li&gt;IE９以下不支持&lt;/li&gt;
  &lt;li&gt;IE９，10,11存在以下问题：
    &lt;ul&gt;
      &lt;li&gt;不支持离线功能&lt;/li&gt;
      &lt;li&gt;IE9不支持文件导入导出&lt;/li&gt;
      &lt;li&gt;IE10不支持拖拽文件导入&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;整理自简书  ：https://www.jianshu.com/p/191d1e21f7ed&lt;/p&gt;
</description>
        <pubDate>Sat, 23 Feb 2019 19:58:01 +0800</pubDate>
        <link>https://ljw718.github.io//2019/02/23/Markdown-to-learnl/</link>
        <guid isPermaLink="true">https://ljw718.github.io//2019/02/23/Markdown-to-learnl/</guid>
        
        <category>Markdown</category>
        
        
        <category>Markdown</category>
        
      </item>
    
      <item>
        <title>Welcome To Jekyll !</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#zhugeliang&quot; id=&quot;markdown-toc-zhugeliang&quot;&gt;诫子书&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用Jekyll编写的第一篇博客 ！&lt;/p&gt;

&lt;h2 id=&quot;zhugeliang&quot;&gt;诫子书&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/jiezishu.jpg&quot; alt=&quot;诫子书&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot;&gt;诸葛亮&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;夫君子之行，静以修身，俭以养德。非淡泊(澹泊)无以明志，非宁静无以致远。夫学须静也，才须学也。非学无以广才，非志无以成学。淫慢则不能励精，险躁则不能冶性。
年与时驰，意与日去，遂成枯落，多不接世，悲守穷庐，将复何及！&lt;/p&gt;

</description>
        <pubDate>Sat, 23 Feb 2019 19:21:01 +0800</pubDate>
        <link>https://ljw718.github.io//2019/02/23/Welcome-to-jekyll/</link>
        <guid isPermaLink="true">https://ljw718.github.io//2019/02/23/Welcome-to-jekyll/</guid>
        
        <category>jekyll</category>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
